---
layout: post
title:  "Building modern Javascript app"
date:   2017-11-11
categories: js
permalink: /:categories/:title.html
---

<br>

Frontend development is becoming more complex. 

More and more logic is being brought to client-side. 
There's demand now for good practices and tools for Javascript in order to make it possible to possible to develop in JS nearly as fast amd 'comfortable' as using backend languages like C# or Java.

In order to achieve this I will set up programming environment including toolset which will allow to achieve:
* Autocomplete/strong typing
* Debugging
* Modularity
* Build process

### Autocomplete/strong typing
In order to achieve this I will use VS Code editor and Typescript. 

As you probably know Typescript (TS) is typed language that compiles to Javascript.

Various IDEs like VS Code or Visual Studio offer some autocomplete for pure JS but it's limited usually to single Javascript file. 

Typescript is better. We will stare aware of the pure JS generated by TS compiler.

### Debugging
We want to be able to debug our code - both JS and TS. 
Also we would like to be able to debug code on any environment - local, test, prod. 

I would like to debug in VS Code IDE or Chrome.

### Modularity
Our code will be divided into modules - we will be able to extract some logic into reusable part and include it in other places in our project. 

This also means ability of using external modules - libraries imported by package management system for JS - NPM.

### Build process
This means compiling TS code, module resolution. If needed also minification and obfuscation. 

It will output pure JS ready for execution by the Browser/Node.js.

Also we would like to have different build modes (dev/test/prod).
<br><br>


In the next articles I'll set up programming toolset which would allow to achieve those requirements.